#+setupfile: ~/github/darrenknewton.com/template.org
#+title: Racket / Org-Mode Test
#+date: <2022-10-02 Sun>
#+description: Testing Org-Mode / Babel with Racket
#+keywords: racket org-mode emacs
#+creator: Yoseka Industrial Group | Advanced Text Processor

* Testing Racket and Org-Babel

Mauris pharetra et ultrices neque ornare aenean. *Id eu nisl* nunc mi /ipsum faucibus vitae/. Sed faucibus turpis in eu mi bibendum. [[file+sys:index.org][Back home]]. Et malesuada fames ac turpis egestas integer eget. Et netus et malesuada fames. Tristique risus nec feugiat in. Sit amet consectetur adipiscing elit pellentesque habitant morbi. Id aliquet lectus proin nibh nisl condimentum. In pellentesque massa placerat duis ultricies lacus sed. Condimentum lacinia quis vel eros donec ac odio tempor orci. Ullamcorper dignissim cras tincidunt lobortis feugiat. Nisi vitae suscipit tellus mauris a diam maecenas. Id aliquet risus feugiat in. Quis enim lobortis scelerisque fermentum dui faucibus in ornare. Aliquam vestibulum morbi blandit cursus risus at ultrices mi tempus. Ut sem viverra aliquet eget. Consectetur adipiscing elit ut aliquam purus. Eu augue ut lectus arcu bibendum at varius vel pharetra. A pellentesque sit amet porttitor eget dolor. Ipsum a arcu cursus vitae congue mauris!

** Code block

The body is treated as a =racket= language expression, and the result is output and shit!!

#+BEGIN_SRC racket :tangle yes :eval no :exports code
    (for ([i (in-range 10)])
      (displayln (format "| ~a | ~a | ~a |" i (* 11 i) (* 23 i))))
#+END_SRC

#+BEGIN_SRC typescript :tangle yes :eval no :exports code
  function loggingIdentity<Type>(arg: Array<Type>): Array<Type> {
    console.log(arg.length); // Array has a .length, so no more error
    return arg;
  }
#+END_SRC

#+BEGIN_QUOTE
This should be a fancy <blockquote /> element in the HTML.
#+END_QUOTE

** Generate a table w Racket (no code block output)

At imperdiet dui accumsan sit amet nulla facilisi morbi. Aliquam sem et tortor consequat id. Massa enim nec dui nunc mattis enim ut tellus elementum. Ut aliquam purus sit amet luctus venenatis lectus. Risus sed vulputate odio ut. Elementum tempus egestas sed sed risus pretium. Rhoncus dolor purus non enim praesent elementum. Dapibus ultrices in iaculis nunc sed augue lacus viverra. Duis ut diam quam nulla porttitor massa id neque. Arcu cursus euismod quis viverra nibh cras. Quam adipiscing vitae proin sagittis nisl rhoncus mattis. Consequat semper viverra nam libero justo. Faucibus interdum posuere lorem ipsum dolor sit amet consectetur. Semper viverra nam libero justo laoreet.

In the org file, we have a =SRC= block of Racket code which generates the table below in org, which is converted to HTML.

*** Random figures in a table

#+BEGIN_SRC racket :noweb yes :exports results :results output raw verbatim :colnames '("a" "b" "c")
      (define (->cur n)
        (exact->inexact (/ n 100)))
      (displayln "| a | b | c |")
      (displayln "|--")
      (for ([i (in-range 10)])
        (displayln (format "| ~a | ~a | ~a |" (->cur (* 109 i)) (->cur (* 1123 i))
                           (number->string (->cur (* 2321 i))))))
#+END_SRC

#+RESULTS:
|    a |      b |      c |
|------+--------+--------|
|  0.0 |    0.0 |    0.0 |
| 1.09 |  11.23 |  23.21 |
| 2.18 |  22.46 |  46.42 |
| 3.27 |  33.69 |  69.63 |
| 4.36 |  44.92 |  92.84 |
| 5.45 |  56.15 | 116.05 |
| 6.54 |  67.38 | 139.26 |
| 7.63 |  78.61 | 162.47 |
| 8.72 |  89.84 | 185.68 |
| 9.81 | 101.07 | 208.89 |

** Generate an image

The image below is generated with some Racket code within a =#+BEGIN_SRC= block.

#+BEGIN_SRC racket :noweb yes :exports results :results file graphics :file "./img/test.png"
(require 2htdp/image)
(define canvas (rectangle 200 200 "solid" "black"))
(define c (circle 50 "solid" "white"))
(save-image (overlay c canvas) "/Users/yuzu/src/org-blog/img/test.png")
#+END_SRC

#+RESULTS:
[[file:./img/test.png]]










